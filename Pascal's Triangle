Given an integer numRows, return the first numRows of Pascal's triangle.
In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:
Example 1:
Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
Example 2:
Input: numRows = 1
Output: [[1]]
Constraints:
1 <= numRows <= 30

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> ans = new ArrayList <> ();

        for(int i = 0; i < numRows; i++){
            ArrayList <Integer> levelList = new ArrayList <> ();
            levelList.add(1);
            if(ans.isEmpty()){
                ans.add(levelList);
            }else{
                int listSize = ans.size();
                if(listSize >= 2){
                    int currSize = listSize + 1;
                    for(int j = 1; j < currSize - 1; j++){
                        levelList.add(ans.get(listSize - 1).get(j - 1) + ans.get(listSize - 1).get(j));
                    }
                }
                levelList.add(1);
                ans.add(levelList);
            }
        }
        
        return ans;
    }
}
