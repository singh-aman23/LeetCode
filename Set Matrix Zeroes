Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.
You must do it in place.
Example 1:
Input: matrix = [[1,1,1],[1,0,1],[1,1,1]]
Output: [[1,0,1],[0,0,0],[1,0,1]]
Example 2:
Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]
Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]

S.C : O(m + n)
class Solution {
    public void setZeroes(int[][] matrix) {
        ArrayList <Integer> xCord = new ArrayList<>();
        ArrayList <Integer> yCord = new ArrayList<>();
        for(int i = 0; i < matrix.length; i++){
            for(int j = 0; j < matrix[0].length; j++){
                if(matrix[i][j] == 0){
                    xCord.add(i);
                    yCord.add(j);
                }
            }
        }
            for(int i = 0; i < xCord.size(); i++){
                for(int j = 0; j < matrix[0].length; j++){
                    matrix[xCord.get(i)][j] = 0;
                }
                for(int j = 0; j < matrix.length; j++){
                    matrix[j][yCord.get(i)] = 0;
                }
            }
    }
}

S.C : O(m + n)
import java.util.*;

class Solution {
    public void setZeroes(int[][] matrix) {
        ArrayList <Integer> rowList = new ArrayList <> ();
         ArrayList <Integer> colList = new ArrayList <> ();

         for(int i = 0; i < matrix.length; i++){
            for(int j = 0; j < matrix[0].length; j++){
                if(matrix[i][j] == 0){
                    rowList.add(i);
                    colList.add(j);
                }
            }
         }

         for(int i = 0; i < rowList.size(); i++){
            matrix = setRowZero(matrix, rowList.get(i));
            matrix = setColZero(matrix, colList.get(i));
         }
    }

    private int[][] setRowZero(int[][] matrix, int row){
        for(int i = 0; i < matrix[0].length; i++){
            matrix[row][i] = 0;
        }
        return matrix;
    }

    private int[][] setColZero(int[][] matrix, int col){
        for(int i = 0; i < matrix.length; i++){
            matrix[i][col] = 0;
        }
        return matrix;
    }
}

S.C : O(1)

class Solution {
    public void setZeroes(int[][] matrix) {
        int row = matrix.length, col = matrix[0].length;
        boolean rowFirstZero = false;

        for(int i = 0; i < row; i++){
            for(int j = 0; j < col; j++){
                if(matrix[i][j] == 0){
                    matrix[0][j] = 0;
                    if(i == 0){
                        rowFirstZero = true;
                    }else{
                    matrix[i][0] = 0;
                    }
                }
            }
        }

        for(int i = 1; i < col; i++){
            if(matrix[0][i] == 0){
                for(int k = 0; k < row; k++){
                    matrix[k][i] = 0;
                }
            }
        }

        for(int i = 1; i < row; i++){
            if(matrix[i][0] == 0){
                 for(int k = 0; k < col; k++){
                    matrix[i][k] = 0;
                }
            }
        }

        if(matrix[0][0] == 0){
            for(int i = 0; i < row; i++){
                matrix[i][0] = 0;
            }
        }

        if(rowFirstZero){
            for(int i = 0; i < col; i++){
                matrix[0][i] = 0;
            }
        }
    }
}


class Solution {
    public void setZeroes(int[][] matrix) {
        boolean rowFirstZero = false;
        int rows = matrix.length, cols = matrix[0].length;
        for(int i = 0; i < rows; i++){
            for(int j = 0; j < cols; j++){
                if(matrix[i][j] == 0){
                    matrix[0][j] = 0;
                    if(i == 0){
                        rowFirstZero = true;
                    }else{
                        matrix[i][0] = 0;
                    }
                }
            }
        }

        //set rows to zero
        for(int i = 1; i < rows; i++){
            if(matrix[i][0] == 0){
                for(int j = 1; j < cols; j++){
                    matrix[i][j] = 0;
                }
            }
        }


        //set columns to zero
        for(int i = 0; i < cols; i++){
            if(matrix[0][i] == 0){
                for(int j = 1; j < rows; j++){
                    matrix[j][i] = 0;
                }
            }
        }

        //check first row
        if(rowFirstZero){
            for(int i = 0; i < cols; i++){
                matrix[0][i] = 0;
            }
        }
    }
}
