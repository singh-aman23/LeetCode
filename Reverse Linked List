Given the head of a singly linked list, reverse the list, and return the reversed list.

Example 1:
Input: head = [1,2,3,4,5]
Output: [5,4,3,2,1]
Example 2
Input: head = [1,2]
Output: [2,1]
Example 3:
Input: head = []
Output: []

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        if(head == null){
        return null;
      }else if(head.next == null){
        return head;
      }
      ListNode tempNode = head;
      ListNode nextNode = tempNode.next;
      tempNode.next = null;
       head = nextNode;

      while(nextNode != null){
        if(head.next == null){
          nextNode.next = tempNode;
          break;
        }
        head = head.next;
        nextNode.next = tempNode;
        tempNode = nextNode;
        nextNode = head;
      }
      return head;
    }
}

class Solution {
    public ListNode reverseList(ListNode head) {
        if(head == null){
            return null;
        }else if(head.next == null){
            return head;
        }
        ListNode currNode = head, prevNode = null, nextNode = null;
        while(currNode != null){
            nextNode = currNode.next;
            currNode.next = prevNode;
            prevNode = currNode;
            currNode = nextNode;
        }
        return prevNode;
    }
}
