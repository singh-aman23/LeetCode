Given the head of a singly linked list, return true if it is a 
palindrome
 or false otherwise.

Example 1:
Input: head = [1,2,2,1]
Output: true

Example 2:
Input: head = [1,2]
Output: false

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode tempNode = head;
        int size = 1;
        while(tempNode.next != null){
            tempNode = tempNode.next;
            size++;
        }
        tempNode = head;
        int[] nodeValueArray = new int[size];
        for(int i = 0; i < size; i ++){
            nodeValueArray[i] = tempNode.val;
            tempNode = tempNode.next;
        }

        int left = 0;
        int right = size - 1;
        while(left <= right){
            if(nodeValueArray[left] != nodeValueArray[right]){
                return false;
            }else{
                left++;
                right--;
            }
        }
        return true;  
    }
}
