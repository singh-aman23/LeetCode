Write a function to find the longest common prefix string amongst an array of strings.
If there is no common prefix, return an empty string "".

Example 1:
Input: strs = ["flower","flow","flight"]
Output: "fl"

Example 2:
Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.
 
Constraints:

1 <= strs.length <= 200
0 <= strs[i].length <= 200
strs[i] consists of only lowercase English letters.

class Solution {
    public String longestCommonPrefix(String[] strs) {
        String smallestString = strs[0], prefix = "";
        for(int i = 0; i < strs.length; i++){
            if(strs[i].length() < smallestString.length()){
                smallestString = strs[i];
            }
        }
        for(int i = 0; i < smallestString.length(); i++){
            prefix += smallestString.charAt(i) + "";
            for(int j = 0; j < strs.length; j++){
                if(!strs[j].startsWith(prefix)){
                    return prefix.substring(0, prefix.length() - 1);
                }
            }
        }
        return prefix;
    }
}
